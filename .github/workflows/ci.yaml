name: CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  project-testing:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Setup Python
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      # 3️⃣ Cache pip dependencies
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 4️⃣ Install dependencies
      - name: Install dependencies
        run: pip install -r requirements.txt

      # 5️⃣ Run pipeline (DVC repro)
      - name: Run pipeline
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: dvc repro

      # 6️⃣ Run model tests
      - name: Run model tests
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: python -m unittest tests/test_model.py

      # 7️⃣ Promote model to production
      - name: Promote model to production
        if: success()
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: python scripts/promote_model.py

      # 8️⃣ Run Flask app tests
      - name: Run Flask app tests
        if: success()
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: python -m unittest tests/test_flask_app.py

      # 9️⃣ Log in to Docker Hub
      - name: Log in to Docker Hub
        if: success()
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # 🔟 Build Docker image
      - name: Build Docker image
        if: success()
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/emotion2:latest .

      # 1️⃣1️⃣ Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        if: success()
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/emotion2:latest

      # 1️⃣2️⃣ Deploy Docker image to Hugging Face Space
      - name: Deploy Docker image to Hugging Face Space
        if: success()
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          HF_USERNAME: ${{ secrets.HF_USERNAME }}
        run: |
          pip install --upgrade huggingface_hub

          # Authenticate
          echo "$HF_TOKEN" | hf auth login

          # Create the Space if it doesn’t exist (Docker SDK type)
          hf api create-repo \
            --repo-id $HF_USERNAME/my-flask-app \
            --type space \
            --space-sdk docker \
            --exist-ok

          # Clone Space repo
          git config --global user.email "ci-bot@example.com"
          git config --global user.name "ci-bot"
          git clone https://huggingface.co/spaces/$HF_USERNAME/my-flask-app
          cd my-flask-app

          # Write Dockerfile that pulls directly from your DockerHub image
          echo "FROM ${{ secrets.DOCKER_HUB_USERNAME }}/emotion2:latest" > Dockerfile
          echo "EXPOSE 7860" >> Dockerfile
          echo 'CMD ["gunicorn", "-b", "0.0.0.0:7860", "app:app"]' >> Dockerfile

          git add Dockerfile
          git commit -m "Deploy latest DockerHub image" || echo "No changes to commit"
          git push
