name: CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  project-testing:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Setup Python
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      # 3Ô∏è‚É£ Cache pip dependencies
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 4Ô∏è‚É£ Install dependencies
      - name: Install dependencies
        run: pip install -r requirements.txt

      # 5Ô∏è‚É£ Run pipeline (DVC repro)
      - name: Run pipeline
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: dvc repro

      # 6Ô∏è‚É£ Run model tests
      - name: Run model tests
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: python -m unittest tests/test_model.py

      # 7Ô∏è‚É£ Promote model to production
      - name: Promote model to production
        if: success()
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: python scripts/promote_model.py

      # 8Ô∏è‚É£ Run Flask app tests
      - name: Run Flask app tests
        if: success()
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: python -m unittest tests/test_flask_app.py

      # 9Ô∏è‚É£ Log in to Docker Hub
      - name: Log in to Docker Hub
        if: success()
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # üîü Build Docker image
      - name: Build Docker image
        if: success()
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/emotion2:latest .

      # 1Ô∏è‚É£1Ô∏è‚É£ Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        if: success()
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/emotion2:latest

      # 1Ô∏è‚É£2Ô∏è‚É£ Deploy to Hugging Face Space
      - name: Deploy to Hugging Face
        if: success()
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }} # Hugging Face token
        run: |
          pip install huggingface_hub
          huggingface-cli login --token $HF_TOKEN
          huggingface-cli repo create my-flask-app --type space --space-type docker --exist-ok
          huggingface-cli repo push my-flask-app --repo-type space
